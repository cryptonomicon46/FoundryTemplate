{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransferEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "amount",
          "type": "uint96"
        }
      ],
      "name": "testWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b5061113f8061003d6000396000f3fe6080604052600436106100c65760003560e01c806366d9a9a01161007f578063b5508aa911610059578063b5508aa9146101cc578063ba414fa6146101e1578063e20c9f7114610206578063fa7626d41461021b57600080fd5b806366d9a9a01461017357806385226c8114610195578063916a17c6146101b757600080fd5b80630a9254e4146100d25780631ed7831c146100e95780633e5e3c23146101145780633e6bfae5146101295780633f7286f41461013e57806350e523be1461015357600080fd5b366100cd57005b600080fd5b3480156100de57600080fd5b506100e7610235565b005b3480156100f557600080fd5b506100fe610280565b60405161010b9190610d36565b60405180910390f35b34801561012057600080fd5b506100fe6102e2565b34801561013557600080fd5b506100e7610342565b34801561014a57600080fd5b506100fe610448565b34801561015f57600080fd5b506100e761016e366004610d83565b6104a8565b34801561017f57600080fd5b506101886105f2565b60405161010b9190610db3565b3480156101a157600080fd5b506101aa6106e1565b60405161010b9190610e8a565b3480156101c357600080fd5b506101886107b1565b3480156101d857600080fd5b506101aa610897565b3480156101ed57600080fd5b506101f6610967565b604051901515815260200161010b565b34801561021257600080fd5b506100fe610a92565b34801561022757600080fd5b506000546101f69060ff1681565b60405161024190610d29565b604051809103906000f08015801561025d573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d8054806020026020016040519081016040528092919081815260200182805480156102d857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ba575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156102d8576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102ba575050505050905090565b60405163248e63e160e11b815260016004820181905260248201526000604482018190526064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063491cc7c290608401600060405180830381600087803b1580156103a457600080fd5b505af11580156103b8573d6000803e3d6000fd5b5050601b54604051671bc16d674ec8000081526001600160a01b0390911692503091507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3601b546040516001600160a01b0390911690600090671bc16d674ec800009082818181858883f19350505050158015610445573d6000803e3d6000fd5b50565b6060600e8054806020026020016040519081016040528092919081815260200182805480156102d8576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102ba575050505050905090565b604051632631f2b160e11b815267016345785d8a00006001600160601b038316116004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90634c63e5629060240160006040518083038186803b15801561050557600080fd5b505afa158015610519573d6000803e3d6000fd5b5050601b546040516001600160a01b0390911692506001600160601b03841680156108fc029250906000818181858888f19350505050158015610560573d6000803e3d6000fd5b50601b5460408051633ccfd60b60e01b815290516001600160a01b039092168031929091633ccfd60b91600480830192600092919082900301818387803b1580156105aa57600080fd5b505af11580156105be573d6000803e3d6000fd5b5050601b546001600160a01b03163191506105ed90506105e76001600160601b03851683610f04565b83610af2565b505050565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156106d85760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156106c057602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106825790505b50505050508152505081526020019060010190610616565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156106d857838290600052602060002001805461072490610f2b565b80601f016020809104026020016040519081016040528092919081815260200182805461075090610f2b565b801561079d5780601f106107725761010080835404028352916020019161079d565b820191906000526020600020905b81548152906001019060200180831161078057829003601f168201915b505050505081526020019060010190610705565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156106d85760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561087f57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108415790505b505050505081525050815260200190600101906107d5565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156106d85783829060005260206000200180546108da90610f2b565b80601f016020809104026020016040519081016040528092919081815260200182805461090690610f2b565b80156109535780601f1061092857610100808354040283529160200191610953565b820191906000526020600020905b81548152906001019060200180831161093657829003601f168201915b5050505050815260200190600101906108bb565b60008054610100900460ff16156109875750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610a8d5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610a15917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610f65565b60408051601f1981840301815290829052610a2f91610f96565b6000604051808303816000865af19150503d8060008114610a6c576040519150601f19603f3d011682016040523d82523d6000602084013e610a71565b606091505b5091505080806020019051810190610a899190610fb2565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156102d8576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102ba575050505050905090565b808214610c19577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610b639060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610c19610c1d565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610d185760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610cb79291602001610f65565b60408051601f1981840301815290829052610cd191610f96565b6000604051808303816000865af19150503d8060008114610d0e576040519150601f19603f3d011682016040523d82523d6000602084013e610d13565b606091505b505050505b6000805461ff001916610100179055565b61013580610fd583390190565b6020808252825182820181905260009190848201906040850190845b81811015610d775783516001600160a01b031683529284019291840191600101610d52565b50909695505050505050565b600060208284031215610d9557600080fd5b81356001600160601b0381168114610dac57600080fd5b9392505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610e5757898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610e425783516001600160e01b0319168252928b019260019290920191908b0190610e18565b50978a01979550505091870191600101610ddb565b50919998505050505050505050565b60005b83811015610e81578181015183820152602001610e69565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ef757878503603f1901845281518051808752610ed8818989018a8501610e66565b601f01601f191695909501860194509285019290850190600101610eb1565b5092979650505050505050565b80820180821115610f2557634e487b7160e01b600052601160045260246000fd5b92915050565b600181811c90821680610f3f57607f821691505b602082108103610f5f57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610f88816004850160208701610e66565b919091016004019392505050565b60008251610fa8818460208701610e66565b9190910192915050565b600060208284031215610fc457600080fd5b81518015158114610dac57600080fdfe608060405234801561001057600080fd5b50610115806100206000396000f3fe60806040526004361060205760003560e01c80633ccfd60b14606257600080fd5b36605d57604051348152309033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3005b600080fd5b348015606d57600080fd5b5060746076565b005b6040514790339082156108fc029083906000818181858888f1935050505015801560a4573d6000803e3d6000fd5b50604051818152339030907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35056fea264697066735822122058d4ef8a62d09c60fa755bdfb42dcb9edbadc0d23b281d188a617a72a74e3b9464736f6c63430008100033a2646970667358221220aae9ecb4ebf784b2e1bc61f57459cca62eeeddfc413f31adde1ebdcb4078220064736f6c63430008100033",
    "sourceMap": "154:938:17:-:0;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3288:44:3;;;;;;;;;;;154:938:17;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100c65760003560e01c806366d9a9a01161007f578063b5508aa911610059578063b5508aa9146101cc578063ba414fa6146101e1578063e20c9f7114610206578063fa7626d41461021b57600080fd5b806366d9a9a01461017357806385226c8114610195578063916a17c6146101b757600080fd5b80630a9254e4146100d25780631ed7831c146100e95780633e5e3c23146101145780633e6bfae5146101295780633f7286f41461013e57806350e523be1461015357600080fd5b366100cd57005b600080fd5b3480156100de57600080fd5b506100e7610235565b005b3480156100f557600080fd5b506100fe610280565b60405161010b9190610d36565b60405180910390f35b34801561012057600080fd5b506100fe6102e2565b34801561013557600080fd5b506100e7610342565b34801561014a57600080fd5b506100fe610448565b34801561015f57600080fd5b506100e761016e366004610d83565b6104a8565b34801561017f57600080fd5b506101886105f2565b60405161010b9190610db3565b3480156101a157600080fd5b506101aa6106e1565b60405161010b9190610e8a565b3480156101c357600080fd5b506101886107b1565b3480156101d857600080fd5b506101aa610897565b3480156101ed57600080fd5b506101f6610967565b604051901515815260200161010b565b34801561021257600080fd5b506100fe610a92565b34801561022757600080fd5b506000546101f69060ff1681565b60405161024190610d29565b604051809103906000f08015801561025d573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600d8054806020026020016040519081016040528092919081815260200182805480156102d857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ba575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156102d8576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102ba575050505050905090565b60405163248e63e160e11b815260016004820181905260248201526000604482018190526064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063491cc7c290608401600060405180830381600087803b1580156103a457600080fd5b505af11580156103b8573d6000803e3d6000fd5b5050601b54604051671bc16d674ec8000081526001600160a01b0390911692503091507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3601b546040516001600160a01b0390911690600090671bc16d674ec800009082818181858883f19350505050158015610445573d6000803e3d6000fd5b50565b6060600e8054806020026020016040519081016040528092919081815260200182805480156102d8576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102ba575050505050905090565b604051632631f2b160e11b815267016345785d8a00006001600160601b038316116004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d90634c63e5629060240160006040518083038186803b15801561050557600080fd5b505afa158015610519573d6000803e3d6000fd5b5050601b546040516001600160a01b0390911692506001600160601b03841680156108fc029250906000818181858888f19350505050158015610560573d6000803e3d6000fd5b50601b5460408051633ccfd60b60e01b815290516001600160a01b039092168031929091633ccfd60b91600480830192600092919082900301818387803b1580156105aa57600080fd5b505af11580156105be573d6000803e3d6000fd5b5050601b546001600160a01b03163191506105ed90506105e76001600160601b03851683610f04565b83610af2565b505050565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156106d85760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156106c057602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106825790505b50505050508152505081526020019060010190610616565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156106d857838290600052602060002001805461072490610f2b565b80601f016020809104026020016040519081016040528092919081815260200182805461075090610f2b565b801561079d5780601f106107725761010080835404028352916020019161079d565b820191906000526020600020905b81548152906001019060200180831161078057829003601f168201915b505050505081526020019060010190610705565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156106d85760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561087f57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108415790505b505050505081525050815260200190600101906107d5565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156106d85783829060005260206000200180546108da90610f2b565b80601f016020809104026020016040519081016040528092919081815260200182805461090690610f2b565b80156109535780601f1061092857610100808354040283529160200191610953565b820191906000526020600020905b81548152906001019060200180831161093657829003601f168201915b5050505050815260200190600101906108bb565b60008054610100900460ff16156109875750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610a8d5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610a15917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610f65565b60408051601f1981840301815290829052610a2f91610f96565b6000604051808303816000865af19150503d8060008114610a6c576040519150601f19603f3d011682016040523d82523d6000602084013e610a71565b606091505b5091505080806020019051810190610a899190610fb2565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156102d8576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102ba575050505050905090565b808214610c19577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610b639060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610c19610c1d565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610d185760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610cb79291602001610f65565b60408051601f1981840301815290829052610cd191610f96565b6000604051808303816000865af19150503d8060008114610d0e576040519150601f19603f3d011682016040523d82523d6000602084013e610d13565b606091505b505050505b6000805461ff001916610100179055565b61013580610fd583390190565b6020808252825182820181905260009190848201906040850190845b81811015610d775783516001600160a01b031683529284019291840191600101610d52565b50909695505050505050565b600060208284031215610d9557600080fd5b81356001600160601b0381168114610dac57600080fd5b9392505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610e5757898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610e425783516001600160e01b0319168252928b019260019290920191908b0190610e18565b50978a01979550505091870191600101610ddb565b50919998505050505050505050565b60005b83811015610e81578181015183820152602001610e69565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ef757878503603f1901845281518051808752610ed8818989018a8501610e66565b601f01601f191695909501860194509285019290850190600101610eb1565b5092979650505050505050565b80820180821115610f2557634e487b7160e01b600052601160045260246000fd5b92915050565b600181811c90821680610f3f57607f821691505b602082108103610f5f57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610f88816004850160208701610e66565b919091016004019392505050565b60008251610fa8818460208701610e66565b9190910192915050565b600060208284031215610fc457600080fd5b81518015158114610dac57600080fdfe608060405234801561001057600080fd5b50610115806100206000396000f3fe60806040526004361060205760003560e01c80633ccfd60b14606257600080fd5b36605d57604051348152309033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3005b600080fd5b348015606d57600080fd5b5060746076565b005b6040514790339082156108fc029083906000818181858888f1935050505015801560a4573d6000803e3d6000fd5b50604051818152339030907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35056fea264697066735822122058d4ef8a62d09c60fa755bdfb42dcb9edbadc0d23b281d188a617a72a74e3b9464736f6c63430008100033a2646970667358221220aae9ecb4ebf784b2e1bc61f57459cca62eeeddfc413f31adde1ebdcb4078220064736f6c63430008100033",
    "sourceMap": "154:938:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;323:57;;;;;;;;;;;;;:::i;:::-;;2161:134:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2930:133;;;;;;;;;;;;;:::i;387:201:17:-;;;;;;;;;;;;;:::i;2631:141:6:-;;;;;;;;;;;;;:::i;769:321:17:-;;;;;;;;;;-1:-1:-1;769:321:17;;;;;:::i;:::-;;:::i;2447:178:6:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;;;;;;;;;;;:::i;1866:141::-;;;;;;;;;;;;;:::i;1819:584:0:-;;;;;;;;;;;;;:::i;:::-;;;3985:14:18;;3978:22;3960:41;;3948:2;3933:18;1819:584:0;3820:187:18;2013:142:6;;;;;;;;;;;;;:::i;1572:26:0:-;;;;;;;;;;-1:-1:-1;1572:26:0;;;;;;;;323:57:17;363:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;357:4:17;:16;;-1:-1:-1;;;;;;357:16:17;-1:-1:-1;;;;;357:16:17;;;;;;;;;;323:57::o;2161:134:6:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:6;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:6;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;387:201:17:-;433:36;;-1:-1:-1;;;433:36:17;;447:4;433:36;;;4219:41:18;;;4276:18;;;4269:50;309:37:1;4335:18:18;;;4328:50;;;4394:18;;;4387:50;433:13:17;;;;4191:19:18;;433:36:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;516:4:17;;484:47;;523:7;4620:25:18;;-1:-1:-1;;;;;516:4:17;;;;-1:-1:-1;501:4:17;;-1:-1:-1;484:47:17;;4608:2:18;4593:18;484:47:17;;;;;;;557:4;;541:40;;-1:-1:-1;;;;;557:4:17;;;;;;573:7;;557:4;541:40;557:4;541:40;573:7;557:4;;541:40;;;;;;;;;;;;;;;;;;;;387:201::o;2631:141:6:-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:6;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;769:321:17:-;823:29;;-1:-1:-1;;;823:29:17;;842:9;-1:-1:-1;;;;;833:18:17;;;823:29;;;3960:41:18;823:9:17;;;;3933:18:18;;823:29:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;878:4:17;;862:39;;-1:-1:-1;;;;;878:4:17;;;;-1:-1:-1;;;;;;862:39:17;;;;;;;-1:-1:-1;862:39:17;878:4;862:39;878:4;862:39;;878:4;862:39;;;;;;;;;;;;;;;;;;;;-1:-1:-1;940:4:17;;963:15;;;-1:-1:-1;;;963:15:17;;;;-1:-1:-1;;;;;940:4:17;;;932:21;;;940:4;;963:13;;:15;;;;;911:18;;963:15;;;;;;;911:18;940:4;963:15;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1018:4:17;;-1:-1:-1;;;;;1018:4:17;1010:21;;-1:-1:-1;1041:41:17;;-1:-1:-1;1050:19:17;-1:-1:-1;;;;;1050:19:17;;1010:21;1050:19;:::i;:::-;1071:10;1041:8;:41::i;:::-;813:277;;769:321;:::o;2447:178:6:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;5442:51:18;;;-1:-1:-1;;;5509:18:18;;;5502:34;2196:43:0;;;;;;;;;5415:18:18;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2013:142:6:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:6;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;5202:262:0:-;5264:1;5259;:6;5255:203;;5286:41;;;;;6712:2:18;6694:21;;;6751:2;6731:18;;;6724:30;6790:34;6785:2;6770:18;;6763:62;-1:-1:-1;;;6856:2:18;6841:18;;6834:32;6898:3;6883:19;;6510:398;5286:41:0;;;;;;;;5346:31;;;7125:21:18;;;7182:2;7162:18;;;7155:30;-1:-1:-1;;;7216:2:18;7201:18;;7194:40;7301:4;7286:20;;7279:36;;;5346:31:0;;;;;;;7266:3:18;5346:31:0;;;5396;;;7538:21:18;;;7595:2;7575:18;;;7568:30;-1:-1:-1;;;7629:2:18;7614:18;;7607:40;7714:4;7699:20;;7692:36;;;5396:31:0;;;;;;;7679:3:18;5396:31:0;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;7941:51:18;;;-1:-1:-1;;;8008:18:18;;;8001:34;;;;2705:4:0;8051:18:18;;;8044:34;2482:11:0;;1671:64;2579:43;;7914:18:18;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;14:658:18:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:18;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:18;;14:658;-1:-1:-1;;;;;;14:658:18:o;677:292::-;735:6;788:2;776:9;767:7;763:23;759:32;756:52;;;804:1;801;794:12;756:52;843:9;830:23;-1:-1:-1;;;;;886:5:18;882:38;875:5;872:49;862:77;;935:1;932;925:12;862:77;958:5;677:292;-1:-1:-1;;;677:292:18:o;974:1567::-;1176:4;1205:2;1245;1234:9;1230:18;1275:2;1264:9;1257:21;1298:6;1333;1327:13;1364:6;1356;1349:22;1390:2;1380:12;;1423:2;1412:9;1408:18;1401:25;;1485:2;1475:6;1472:1;1468:14;1457:9;1453:30;1449:39;1523:2;1515:6;1511:15;1544:1;1565;1575:937;1591:6;1586:3;1583:15;1575:937;;;1660:22;;;-1:-1:-1;;1656:36:18;1644:49;;1716:13;;1803:9;;-1:-1:-1;;;;;1799:35:18;1784:51;;1874:11;;1868:18;1906:15;;;1899:27;;;1987:19;;1756:15;;;2019:24;;;2109:21;;;;2154:1;;2077:2;2065:15;;;2168:236;2184:8;2179:3;2176:17;2168:236;;;2265:15;;-1:-1:-1;;;;;;2261:42:18;2247:57;;2373:17;;;;2212:1;2203:11;;;;;2330:14;;;;2168:236;;;-1:-1:-1;2490:12:18;;;;2427:5;-1:-1:-1;;;2455:15:18;;;;1617:1;1608:11;1575:937;;;-1:-1:-1;2529:6:18;;974:1567;-1:-1:-1;;;;;;;;;974:1567:18:o;2546:250::-;2631:1;2641:113;2655:6;2652:1;2649:13;2641:113;;;2731:11;;;2725:18;2712:11;;;2705:39;2677:2;2670:10;2641:113;;;-1:-1:-1;;2788:1:18;2770:16;;2763:27;2546:250::o;2801:1014::-;2963:4;2992:2;3032;3021:9;3017:18;3062:2;3051:9;3044:21;3085:6;3120;3114:13;3151:6;3143;3136:22;3189:2;3178:9;3174:18;3167:25;;3251:2;3241:6;3238:1;3234:14;3223:9;3219:30;3215:39;3201:53;;3289:2;3281:6;3277:15;3310:1;3320:466;3334:6;3331:1;3328:13;3320:466;;;3399:22;;;-1:-1:-1;;3395:36:18;3383:49;;3455:13;;3497:9;;3519:24;;;3556:74;3497:9;3604:15;;;3591:11;;;3556:74;:::i;:::-;3696:2;3673:17;-1:-1:-1;;3669:31:18;3657:44;;;;3653:53;;;-1:-1:-1;3764:12:18;;;;3729:15;;;;3356:1;3349:9;3320:466;;;-1:-1:-1;3803:6:18;;2801:1014;-1:-1:-1;;;;;;;2801:1014:18:o;4656:222::-;4721:9;;;4742:10;;;4739:133;;;4794:10;4789:3;4785:20;4782:1;4775:31;4829:4;4826:1;4819:15;4857:4;4854:1;4847:15;4739:133;4656:222;;;;:::o;4883:380::-;4962:1;4958:12;;;;5005;;;5026:61;;5080:4;5072:6;5068:17;5058:27;;5026:61;5133:2;5125:6;5122:14;5102:18;5099:38;5096:161;;5179:10;5174:3;5170:20;5167:1;5160:31;5214:4;5211:1;5204:15;5242:4;5239:1;5232:15;5096:161;;4883:380;;;:::o;5547:384::-;-1:-1:-1;;;;;;5732:33:18;;5720:46;;5789:13;;5702:3;;5811:74;5789:13;5874:1;5865:11;;5858:4;5846:17;;5811:74;:::i;:::-;5905:16;;;;5923:1;5901:24;;5547:384;-1:-1:-1;;;5547:384:18:o;5936:287::-;6065:3;6103:6;6097:13;6119:66;6178:6;6173:3;6166:4;6158:6;6154:17;6119:66;:::i;:::-;6201:16;;;;;5936:287;-1:-1:-1;;5936:287:18:o;6228:277::-;6295:6;6348:2;6336:9;6327:7;6323:23;6319:32;6316:52;;;6364:1;6361;6354:12;6316:52;6396:9;6390:16;6449:5;6442:13;6435:21;6428:5;6425:32;6415:60;;6471:1;6468;6461:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testTransferEvent()": "3e6bfae5",
    "testWithdraw(uint96)": "50e523be"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTransferEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"}],\"name\":\"testWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"testWithdraw(uint96)\":{\"details\":\"the default amount given to a contract is 2**96 wei,so we have to restrict the amount to uint96exclude <0.1 ether by using vm.assume\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Safe.t.sol\":\"SafeTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xf5ee6ffdf800ff79b630415dec6257dd930ee8a9b5b17996a2ee2e841d3afcc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://978647b43acaf65a9c1c1c583c028fc534c42a219d5f8857c146fba6682aa90c\",\"dweb:/ipfs/QmNNkThmMkjtw8ArYJRTqy2h6axfsZPE67XZe5zRnWViur\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xf6746576912986486f4e5eccdb6b3bbb03e47c4da75a59acc4b1c313b8d31d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01fd4243d8a85cc7f07b6c5ac9e3f5f38b2443ef82025953c3badb39099fe2e4\",\"dweb:/ipfs/QmVDUyQ3tE4a2b87wJDAkwwyFwRpUPGuy8yJDV9JgHqnrd\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x8134c22af343e12f0ee5c565a2eb0d8a5472da7f499abac7b519f634a69c7c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1552599c06a879f4938e14b1fd1e4a4a7eda097b1c984ce0a9cbca33ea64f7d6\",\"dweb:/ipfs/QmNxyLpvNX3woGMHJAQGz89dzRsMFaxT38ZmtgPVMG2DLD\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xe0cfe5ca62fb9d9366be870999bd82802d6b913c1f960f67b8f17060008f2d1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddadc1e899953cb26e7d87c0f27284d02f09b611cfd3300e321c33dc2c65d0b3\",\"dweb:/ipfs/Qmbmrdph3D5YweihJSPM6sopZcSKWMox2ZM89dyonfhrq8\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"src/Safe.sol\":{\"keccak256\":\"0xaee4c7021d3fe1df145a268f6a1c97a165c5d7d47f853f1636a041e9e3981598\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cfe998517e7b92448a394060ac7706b74998605a8b1deab842847ce1d2685d64\",\"dweb:/ipfs/QmY3oQ8pnuWXno4nujh9nK7x4uwbFrzdsAti5XtgTYAMV5\"]},\"test/Safe.t.sol\":{\"keccak256\":\"0x0664016a193aebf528934da0ef58a62f9db5090b8a6cd3c0639801ed9dd51335\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e5594ab169e825393a6602a2da52c0f1ec89f544a205a29417840e0f67e19515\",\"dweb:/ipfs/QmS8mWjMCSEYpamKd9LxPUvwzWDWT16XjFeifcaLaeyGZv\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTransferEvent"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "amount",
              "type": "uint96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testWithdraw"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "testWithdraw(uint96)": {
            "details": "the default amount given to a contract is 2**96 wei,so we have to restrict the amount to uint96exclude <0.1 ether by using vm.assume"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Safe.t.sol": "SafeTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xf5ee6ffdf800ff79b630415dec6257dd930ee8a9b5b17996a2ee2e841d3afcc9",
        "urls": [
          "bzz-raw://978647b43acaf65a9c1c1c583c028fc534c42a219d5f8857c146fba6682aa90c",
          "dweb:/ipfs/QmNNkThmMkjtw8ArYJRTqy2h6axfsZPE67XZe5zRnWViur"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xf6746576912986486f4e5eccdb6b3bbb03e47c4da75a59acc4b1c313b8d31d9f",
        "urls": [
          "bzz-raw://01fd4243d8a85cc7f07b6c5ac9e3f5f38b2443ef82025953c3badb39099fe2e4",
          "dweb:/ipfs/QmVDUyQ3tE4a2b87wJDAkwwyFwRpUPGuy8yJDV9JgHqnrd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x8134c22af343e12f0ee5c565a2eb0d8a5472da7f499abac7b519f634a69c7c4d",
        "urls": [
          "bzz-raw://1552599c06a879f4938e14b1fd1e4a4a7eda097b1c984ce0a9cbca33ea64f7d6",
          "dweb:/ipfs/QmNxyLpvNX3woGMHJAQGz89dzRsMFaxT38ZmtgPVMG2DLD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xe0cfe5ca62fb9d9366be870999bd82802d6b913c1f960f67b8f17060008f2d1a",
        "urls": [
          "bzz-raw://ddadc1e899953cb26e7d87c0f27284d02f09b611cfd3300e321c33dc2c65d0b3",
          "dweb:/ipfs/Qmbmrdph3D5YweihJSPM6sopZcSKWMox2ZM89dyonfhrq8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "src/Safe.sol": {
        "keccak256": "0xaee4c7021d3fe1df145a268f6a1c97a165c5d7d47f853f1636a041e9e3981598",
        "urls": [
          "bzz-raw://cfe998517e7b92448a394060ac7706b74998605a8b1deab842847ce1d2685d64",
          "dweb:/ipfs/QmY3oQ8pnuWXno4nujh9nK7x4uwbFrzdsAti5XtgTYAMV5"
        ],
        "license": "UNLICENSED"
      },
      "test/Safe.t.sol": {
        "keccak256": "0x0664016a193aebf528934da0ef58a62f9db5090b8a6cd3c0639801ed9dd51335",
        "urls": [
          "bzz-raw://e5594ab169e825393a6602a2da52c0f1ec89f544a205a29417840e0f67e19515",
          "dweb:/ipfs/QmS8mWjMCSEYpamKd9LxPUvwzWDWT16XjFeifcaLaeyGZv"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Safe.t.sol",
    "id": 26869,
    "exportedSymbols": {
      "DSTest": [
        1786
      ],
      "Safe": [
        26744
      ],
      "SafeTest": [
        26868
      ],
      "StdAssertions": [
        3092
      ],
      "StdChains": [
        3786
      ],
      "StdCheats": [
        5747
      ],
      "StdInvariant": [
        6037
      ],
      "StdStorage": [
        6787
      ],
      "StdUtils": [
        9027
      ],
      "Test": [
        9074
      ],
      "TestBase": [
        1846
      ],
      "Vm": [
        10364
      ],
      "console": [
        18428
      ],
      "console2": [
        26524
      ],
      "stdError": [
        5813
      ],
      "stdJson": [
        6613
      ],
      "stdMath": [
        6755
      ],
      "stdStorage": [
        8220
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1053:17",
    "nodes": [
      {
        "id": 26746,
        "nodeType": "PragmaDirective",
        "src": "39:24:17",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 26747,
        "nodeType": "ImportDirective",
        "src": "65:28:17",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26869,
        "sourceUnit": 9075,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26748,
        "nodeType": "ImportDirective",
        "src": "94:32:17",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console2.sol",
        "file": "forge-std/console2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26869,
        "sourceUnit": 26525,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26749,
        "nodeType": "ImportDirective",
        "src": "127:25:17",
        "nodes": [],
        "absolutePath": "src/Safe.sol",
        "file": "../src/Safe.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26869,
        "sourceUnit": 26745,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26868,
        "nodeType": "ContractDefinition",
        "src": "154:938:17",
        "nodes": [
          {
            "id": 26759,
            "nodeType": "EventDefinition",
            "src": "186:81:17",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "name": "Transfer",
            "nameLocation": "192:8:17",
            "parameters": {
              "id": 26758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26753,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "217:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26759,
                  "src": "201:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "201:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26755,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "241:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26759,
                  "src": "225:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "225:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26757,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "259:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26759,
                  "src": "251:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "251:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "200:66:17"
            }
          },
          {
            "id": 26762,
            "nodeType": "VariableDeclaration",
            "src": "273:9:17",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "safe",
            "nameLocation": "278:4:17",
            "scope": 26868,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Safe_$26744",
              "typeString": "contract Safe"
            },
            "typeName": {
              "id": 26761,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26760,
                "name": "Safe",
                "nameLocations": [
                  "273:4:17"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26744,
                "src": "273:4:17"
              },
              "referencedDeclaration": 26744,
              "src": "273:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Safe_$26744",
                "typeString": "contract Safe"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 26766,
            "nodeType": "FunctionDefinition",
            "src": "288:29:17",
            "nodes": [],
            "body": {
              "id": 26765,
              "nodeType": "Block",
              "src": "315:2:17",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 26763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "295:2:17"
            },
            "returnParameters": {
              "id": 26764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "315:0:17"
            },
            "scope": 26868,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26777,
            "nodeType": "FunctionDefinition",
            "src": "323:57:17",
            "nodes": [],
            "body": {
              "id": 26776,
              "nodeType": "Block",
              "src": "347:33:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 26774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26769,
                      "name": "safe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26762,
                      "src": "357:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Safe_$26744",
                        "typeString": "contract Safe"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 26772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "363:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Safe_$26744_$",
                          "typeString": "function () returns (contract Safe)"
                        },
                        "typeName": {
                          "id": 26771,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 26770,
                            "name": "Safe",
                            "nameLocations": [
                              "367:4:17"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 26744,
                            "src": "367:4:17"
                          },
                          "referencedDeclaration": 26744,
                          "src": "367:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Safe_$26744",
                            "typeString": "contract Safe"
                          }
                        }
                      },
                      "id": 26773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "363:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Safe_$26744",
                        "typeString": "contract Safe"
                      }
                    },
                    "src": "357:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Safe_$26744",
                      "typeString": "contract Safe"
                    }
                  },
                  "id": 26775,
                  "nodeType": "ExpressionStatement",
                  "src": "357:16:17"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "332:5:17",
            "parameters": {
              "id": 26767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "337:2:17"
            },
            "returnParameters": {
              "id": 26768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "347:0:17"
            },
            "scope": 26868,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26813,
            "nodeType": "FunctionDefinition",
            "src": "387:201:17",
            "nodes": [],
            "body": {
              "id": 26812,
              "nodeType": "Block",
              "src": "423:165:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 26783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "447:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 26784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "452:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 26785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "457:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 26786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "463:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 26780,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "433:2:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10364",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "436:10:17",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10147,
                      "src": "433:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 26787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "433:36:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26788,
                  "nodeType": "ExpressionStatement",
                  "src": "433:36:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 26792,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "501:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SafeTest_$26868",
                              "typeString": "contract SafeTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SafeTest_$26868",
                              "typeString": "contract SafeTest"
                            }
                          ],
                          "id": 26791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "493:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26790,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "493:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "493:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26796,
                            "name": "safe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26762,
                            "src": "516:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$26744",
                              "typeString": "contract Safe"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Safe_$26744",
                              "typeString": "contract Safe"
                            }
                          ],
                          "id": 26795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "508:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26794,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "508:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "508:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 26798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "523:7:17",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "id": 26789,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26759,
                      "src": "484:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "484:47:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26800,
                  "nodeType": "EmitStatement",
                  "src": "479:52:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 26809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "573:7:17",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 26805,
                                "name": "safe",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26762,
                                "src": "557:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Safe_$26744",
                                  "typeString": "contract Safe"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Safe_$26744",
                                  "typeString": "contract Safe"
                                }
                              ],
                              "id": 26804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "549:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 26803,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "549:7:17",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 26806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "549:13:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 26802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "541:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 26801,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "541:8:17",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "541:22:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 26808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "564:8:17",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "541:31:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 26810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "541:40:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26811,
                  "nodeType": "ExpressionStatement",
                  "src": "541:40:17"
                }
              ]
            },
            "functionSelector": "3e6bfae5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTransferEvent",
            "nameLocation": "396:17:17",
            "parameters": {
              "id": 26778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:2:17"
            },
            "returnParameters": {
              "id": 26779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "423:0:17"
            },
            "scope": 26868,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26867,
            "nodeType": "FunctionDefinition",
            "src": "769:321:17",
            "nodes": [],
            "body": {
              "id": 26866,
              "nodeType": "Block",
              "src": "813:277:17",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "id": 26824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26822,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26816,
                          "src": "833:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "302e31",
                          "id": 26823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "842:9:17",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        },
                        "src": "833:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 26819,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "823:2:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10364",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "826:6:17",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10032,
                      "src": "823:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 26825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "823:29:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26826,
                  "nodeType": "ExpressionStatement",
                  "src": "823:29:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26835,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26816,
                        "src": "894:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 26831,
                                "name": "safe",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26762,
                                "src": "878:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Safe_$26744",
                                  "typeString": "contract Safe"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Safe_$26744",
                                  "typeString": "contract Safe"
                                }
                              ],
                              "id": 26830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "870:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 26829,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "870:7:17",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 26832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "870:13:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 26828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "862:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 26827,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "862:8:17",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "862:22:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 26834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "885:8:17",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "862:31:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 26836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "862:39:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26837,
                  "nodeType": "ExpressionStatement",
                  "src": "862:39:17"
                },
                {
                  "assignments": [
                    26839
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26839,
                      "mutability": "mutable",
                      "name": "preBalance",
                      "nameLocation": "919:10:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 26866,
                      "src": "911:18:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 26838,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "911:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26845,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 26842,
                          "name": "safe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26762,
                          "src": "940:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Safe_$26744",
                            "typeString": "contract Safe"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Safe_$26744",
                            "typeString": "contract Safe"
                          }
                        ],
                        "id": 26841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "932:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 26840,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 26843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "932:13:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 26844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "946:7:17",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "932:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "911:42:17"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 26846,
                        "name": "safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26762,
                        "src": "963:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$26744",
                          "typeString": "contract Safe"
                        }
                      },
                      "id": 26848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "968:8:17",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26743,
                      "src": "963:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 26849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "963:15:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26850,
                  "nodeType": "ExpressionStatement",
                  "src": "963:15:17"
                },
                {
                  "assignments": [
                    26852
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26852,
                      "mutability": "mutable",
                      "name": "postBalance",
                      "nameLocation": "996:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 26866,
                      "src": "988:19:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 26851,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "988:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26858,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 26855,
                          "name": "safe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26762,
                          "src": "1018:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Safe_$26744",
                            "typeString": "contract Safe"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Safe_$26744",
                            "typeString": "contract Safe"
                          }
                        ],
                        "id": 26854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1010:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 26853,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1010:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 26856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1010:13:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 26857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1024:7:17",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1010:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "988:43:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 26862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26860,
                          "name": "postBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26852,
                          "src": "1050:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 26861,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26816,
                          "src": "1063:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "src": "1050:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 26863,
                        "name": "preBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26839,
                        "src": "1071:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26859,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1977,
                        2002,
                        2015,
                        2031,
                        2073,
                        2115,
                        2157,
                        2194,
                        2231,
                        2268,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1041:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 26864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1041:41:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26865,
                  "nodeType": "ExpressionStatement",
                  "src": "1041:41:17"
                }
              ]
            },
            "documentation": {
              "id": 26814,
              "nodeType": "StructuredDocumentation",
              "src": "594:169:17",
              "text": " @dev the default amount given to a contract is 2**96 wei,so we have to restrict the amount to uint96\n @dev exclude <0.1 ether by using vm.assume"
            },
            "functionSelector": "50e523be",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdraw",
            "nameLocation": "778:12:17",
            "parameters": {
              "id": 26817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26816,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "798:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 26867,
                  "src": "791:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 26815,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "790:15:17"
            },
            "returnParameters": {
              "id": 26818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "813:0:17"
            },
            "scope": 26868,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26750,
              "name": "Test",
              "nameLocations": [
                "175:4:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9074,
              "src": "175:4:17"
            },
            "id": 26751,
            "nodeType": "InheritanceSpecifier",
            "src": "175:4:17"
          }
        ],
        "canonicalName": "SafeTest",
        "contractDependencies": [
          26744
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          26868,
          9074,
          1846,
          1843,
          9027,
          6037,
          5747,
          5358,
          3786,
          3092,
          1786
        ],
        "name": "SafeTest",
        "nameLocation": "163:8:17",
        "scope": 26869,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 17
}